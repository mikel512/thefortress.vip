// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using vApplication.Context;

#nullable disable

namespace vApplication.Migrations
{
    [DbContext(typeof(TheFortressContext))]
    partial class TheFortressContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("vDomain.Entity.AdminMessage", b =>
                {
                    b.Property<int>("AdminMessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminMessageId"), 1L, 1);

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sender")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToTable("AdminMessage", (string)null);
                });

            modelBuilder.Entity("vDomain.Entity.Analytic", b =>
                {
                    b.Property<long>("AnalyticsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("AnalyticsId"), 1L, 1);

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Location")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("AnalyticsId")
                        .HasName("PK__analytic__506974E39436EBE6");

                    b.ToTable("analytics", (string)null);
                });

            modelBuilder.Entity("vDomain.Entity.ApprovalQueue", b =>
                {
                    b.Property<int>("QueueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QueueId"), 1L, 1);

                    b.ToTable("ApprovalQueue", (string)null);
                });

            modelBuilder.Entity("vDomain.Entity.Artist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Biography")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Picture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaylistEmbed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tour")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Artist", (string)null);
                });

            modelBuilder.Entity("vDomain.Entity.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CityId"), 1L, 1);

                    b.Property<string>("CityName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Image")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("CityId");

                    b.ToTable("City", (string)null);
                });

            modelBuilder.Entity("vDomain.Entity.CodeUser", b =>
                {
                    b.Property<int>("CodeId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CodeId")
                        .HasName("PK__CodeUser__C6DE2C15B83FB2CB");

                    b.ToTable("CodeUsers");
                });

            modelBuilder.Entity("vDomain.Entity.Comment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommentId"), 1L, 1);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<DateTime>("DateStamp")
                        .HasColumnType("datetime");

                    b.Property<int>("Upvotes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CommentId")
                        .HasName("Comment_pk");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("CommentId"), false);

                    b.ToTable("Comment", (string)null);
                });

            modelBuilder.Entity("vDomain.Entity.EventConcert", b =>
                {
                    b.Property<int>("EventConcertId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventConcertId"), 1L, 1);

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("details");

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("datetime");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventTime")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Flyer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsApproved")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Price")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("price");

                    b.Property<string>("Status")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("Tickets")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("VenueFk")
                        .HasColumnType("int")
                        .HasColumnName("Venue_FK");

                    b.HasKey("EventConcertId")
                        .HasName("PK__EventCon__91322059EC10CB1A");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("EventConcertId"), false);

                    b.HasIndex("VenueFk");

                    b.HasIndex(new[] { "EventConcertId", "VenueFk" }, "IX_EventConcert");

                    b.ToTable("EventConcert", (string)null);
                });

            modelBuilder.Entity("vDomain.Entity.LinkType", b =>
                {
                    b.Property<int>("LinkTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LinkTypeId"), 1L, 1);

                    b.Property<string>("FaImgClass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkType1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LinkType");

                    b.HasKey("LinkTypeId");

                    b.ToTable("LinkType", (string)null);
                });

            modelBuilder.Entity("vDomain.Entity.TrustedCode", b =>
                {
                    b.Property<int>("TrustedCodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TrustedCodeId"), 1L, 1);

                    b.Property<string>("CodeString")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaxTimesUsed")
                        .HasColumnType("int");

                    b.Property<int>("TimesUsed")
                        .HasColumnType("int");

                    b.HasKey("TrustedCodeId");

                    b.ToTable("TrustedCode", (string)null);
                });

            modelBuilder.Entity("vDomain.Entity.Venue", b =>
                {
                    b.Property<int>("VenueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VenueId"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int?>("CityFk")
                        .HasColumnType("int")
                        .HasColumnName("City_FK");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hours")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Location")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenuLink")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TicketsLink")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("VenueName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("VenueId");

                    b.HasIndex("CityFk");

                    b.HasIndex(new[] { "VenueId" }, "IX_Venue");

                    b.ToTable("Venue", (string)null);
                });

            modelBuilder.Entity("vDomain.Entity.EventConcert", b =>
                {
                    b.HasOne("vDomain.Entity.Venue", "VenueFkNavigation")
                        .WithMany("EventConcerts")
                        .HasForeignKey("VenueFk")
                        .HasConstraintName("FK_EventConcert_Venue");

                    b.Navigation("VenueFkNavigation");
                });

            modelBuilder.Entity("vDomain.Entity.Venue", b =>
                {
                    b.HasOne("vDomain.Entity.City", "CityFkNavigation")
                        .WithMany("Venues")
                        .HasForeignKey("CityFk")
                        .HasConstraintName("FK_Venue_City");

                    b.Navigation("CityFkNavigation");
                });

            modelBuilder.Entity("vDomain.Entity.City", b =>
                {
                    b.Navigation("Venues");
                });

            modelBuilder.Entity("vDomain.Entity.Venue", b =>
                {
                    b.Navigation("EventConcerts");
                });
#pragma warning restore 612, 618
        }
    }
}
